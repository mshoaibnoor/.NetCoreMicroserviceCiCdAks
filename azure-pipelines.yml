# # ASP.NET Core
# # Build and test ASP.NET Core projects targeting .NET Core.
# # Add steps that run tests, create a NuGet package, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name : NetCore-CustomerApi-CI
trigger:
  branches:
    include:
      - master
  paths:
    include: # # trigger only if there is a change in CustomerApi folder
      - CustomerApi/*   
 
pool:
  vmImage: 'windows-latest' 
 
variables:
  buildConfiguration: 'Release'

steps:
# # Install all package dependencies to the correct state matching the package references in your project file (.csproj)
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.0.401'
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/CustomerApi*.csproj'
  displayName: 'Restore Nuget Packages'

 
 # # Build the dot net project with 
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/CustomerApi*.csproj'
    arguments: '--no-restore'
  displayName: 'Build projects'
 
 # # Run the test cases and generate a coverage report

- task: CmdLine@2
  inputs:
    script: 'ls'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/Test*.csproj'
    arguments: '--no-restore --no-build'
  displayName: 'Run Tests'
 
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '''$(System.DefaultWorkingDirectory)/**/*coverage.xml'''
    reportDirectory: '''$(System.DefaultWorkingDirectory)**/coverage'''

# # Create a ZIP of the project 
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
 
 # # Publish the ZIP folder as an artifact to be used in the release pipeline
- upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  artifact: drop

